function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){this.page=2,this.category=0,this.ulObj=$(".list-inner-group"),this.loadMoreBtn=$("#load-more-btn")}Banner.prototype.initBanner=function(){var n=this,e=n.liList.eq(0).clone(),t=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(e),n.bannerUl.prepend(t),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,e=$(".page-control"),t=0;t<n.bannerCount;t++){var r=$("<li></li>");e.append(r),0===t&&r.addClass("active")}e.css({width:12*n.bannerCount+16+16*n.bannerCount})},Banner.prototype.toggleArrow=function(n){var e=this;n?(e.leftArrow.show(),e.rightArrow.show()):(e.leftArrow.hide(),e.rightArrow.hide())},Banner.prototype.animate=function(){var n=this;n.bannerUl.stop().animate({left:-798*n.index},500);var e=n.index;e=0===e?n.bannerCount-1:e===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;n.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenPageControl=function(){var t=this;t.pageControl.children("li").each(function(n,e){$(e).click(function(){t.index=n+1,t.animate(),$(e).addClass("active").siblings().removeClass("active")})})},Banner.prototype.run=function(){this.loop(),this.initBanner(),this.initPageControl(),this.listenBannerHover(),this.listenArrowClick(),this.listenPageControl()},Index.prototype.ListenLoadMoreEvent=function(){var r=this;r.loadMoreBtn.click(function(){csrfajax.get({url:"/news/news_list/",data:{page:r.page,category:r.category},success:function(n){if(200===n.code){var e=n.data;if(0!==e.length){var t=template("more_news",{news:e});r.ulObj.append(t),r.page+=1}else r.loadMoreBtn.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab li").click(function(){a.page=1;var r=$(this),i=r.attr("data-category");csrfajax.get({url:"/news/news_list/",data:{page:a.page,category:i},success:function(n){if(200===n.code){a.ulObj.empty();var e=n.data,t=template("more_news",{news:e});a.ulObj.append(t),r.addClass("active").siblings().removeClass("active"),a.page=2,a.category=i,a.loadMoreBtn.show()}},error:function(n){console.log(n)}})})},Index.prototype.run=function(){this.ListenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
