function News(){this.progressGroup=$("#progress-group")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFielEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),csrfajax.post({url:"/adminlte/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var a=this;$("#thumbnail-btn").change(function(){var r=this.files[0];csrfajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,o=(new Date).getTime()+"."+r.name.split(".")[1],n={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(r,o,t,n,i).subscribe({next:a.handleFileUploadProgress,error:a.handleFileUploadError,complete:a.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var o=$(".progress-bar");o.css({width:t}),o.text(t)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="http://7xqenu.com1.z0.glb.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name='title']").val(),o=$("select[name='category']").val(),n=$("input[name='desc']").val(),i=$("input[name='thumbnail']").val(),r=window.ue.getContent();csrfajax.post({url:"/cms/write_news/",data:{title:t,category:o,desc:n,thumbnail:i,content:r},success:function(e){200===e.code&&(layer.msg("恭喜！新闻发表成功"),window.location.reload())}})})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listenSubmitEvent(),e.listenUploadFielEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
