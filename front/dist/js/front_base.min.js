function FrontBase(){this.authBox=$(".auth-box"),this.userMoreBox=$(".user-more-box")}function getStyle(t,n){return t.currentStyle?t.currentStyle[n]:getComputedStyle(t,!1)[n]}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.signInBtn=$(".signin-btn"),t.signUpBtn=$(".signup-btn"),t.closeBtn=$(".close-btn"),t.authBox=$(".auth-inner-group"),t.smsCaptchaBtn=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=this;t.authBox.hover(function(){t.userMoreBox.show()},function(){t.userMoreBox.hide()})},Auth.prototype.run=function(){this.listenCloseEvent(),this.listenAuthBoxClickEvent(),this.listenSwitchEvent(),this.listenSignIn(),this.listenSignUp(),this.listenImgCaptchaEvent(),this.listenSmsCaptchaEvent()},Auth.prototype.listenAuthBoxClickEvent=function(){var t=this;t.signInBtn.click(function(){t.authBox.css({left:0}),t.showEvent()}),t.signUpBtn.click(function(){t.authBox.css({left:-400}),t.showEvent()})},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hiddenEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenCloseEvent=function(){var t=this;t.closeBtn.click(function(){t.hiddenEvent()})},Auth.prototype.listenSwitchEvent=function(){var t=this;$(".switch").click(function(){0<=parseInt(getStyle(t.authBox[0],"left"))?t.authBox.animate({left:"-400px"}):t.authBox.animate({left:0})})},Auth.prototype.listenSignIn=function(){var o=this;$(".signin-group").find(".submit-btn").click(function(){var t=$(".signin-group").find('input[name="telephone"]').val(),n=$(".signin-group").find('input[name="password"]').val(),e=$(".signin-group").find('input[name="remember"]').prop("checked");e=e?1:0,csrfajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e},success:function(t){if(200===t.code)o.hiddenEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var s=n[e][0];window.messageBox.show(s)}}},error:function(t){console.log(t)}})})},Auth.prototype.listenSignUp=function(){var r=this;$(".signup-group").find(".submit-btn").click(function(t){t.preventDefault();var n=$(".signup-group input[name=telephone]").val(),e=$(".signup-group input[name=username]").val(),s=$(".signup-group input[name=img_captcha]").val(),o=$(".signup-group input[name=password]").val(),i=$(".signup-group input[name=re_password]").val(),a=$(".signup-group input[name=sms_captcha]").val();csrfajax.post({url:"/account/register/",data:{telephone:n,username:e,img_captcha:s,password:o,re_password:i,sms_captcha:a},success:function(t){if(200===t.code)console.log(t),r.hiddenEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var s=n[e][0];window.messageBox.show(s)}}},error:function(t){window.alert("服务器错误")}})})},Auth.prototype.listenImgCaptchaEvent=function(){$(".img-captcha").click(function(){$(this).attr({src:"/account/img_captcha?random"+Math.random()})})},Auth.prototype.listenSmsCaptchaEvent=function(){var s=this,n=$(".signup-group input[name='telephone']");s.smsCaptchaBtn.click(function(){var t=n.val();/^1\d{10}$/.test(t)?csrfajax.get({url:"/account/sms_code/",data:{telephone:t},success:function(t){window.messageBox.showSuccess("短信发送成功"),s.smsCaptchaBtn.addClass("disabled"),s.smsCaptchaBtn.text("60s");var n=59,e=setInterval(function(){s.smsCaptchaBtn.unbind("click"),s.smsCaptchaBtn.text(n+"s"),(n-=1)<=0&&(s.smsCaptchaBtn.removeClass("disabled"),s.smsCaptchaBtn.text("发送短信"),clearInterval(e),s.listenSmsCaptchaEvent())},1e3)},fail:function(t){console.log(t)}}):t?window.messageBox.showError("请输入合法的手机号啊"):(console.log(t),window.messageBox.showInfo("请输入手机号"))})},$(function(){var t=new Auth,n=new FrontBase;t.run(),n.run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
